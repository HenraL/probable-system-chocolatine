# This is a basic workflow to help you get started with Actions
name: CI



# Controls when the workflow will run
on:
# Triggers the workflow on push or pull request events but only for the main branch
push:
branches-ignore:
- 'ga-ignore-**'
pull_request:
branches-ignore:
- 'ga-ignore-**'
# Allows you to run this workflow manually from the Actions tab
workflow_dispatch:
# inputs:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
# This workflow contains a single job called "build"
build:
# The type of runner that the job will run on
runs-on: ubuntu-latest
env:
my_name: .github/Lucas_mchn
# Steps represent a sequence of tasks that will be executed as part of the job
steps:
# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
- uses: actions/checkout@v2
- name: check_repository_cleanliness
# if: github.repository == 'pain_au_chocolat'
# if: ${{ env.my_name == 'pain_au_chocolat' }}
#if: contains(GITHUB_REPOSITORY, 'pain_au_chocolat')
if: github.repository == 'LMECHIN/Lucas_mchn'
run: echo "::error title=Unwanted file detected,file=$my_name,line=1,col=5,endColumn=7::$my_name"
#My docker
- name: check_program_compilation
uses: docker://alpine:3.8
#Docker login
- name: run_tests
uses: docker://docker.io/epitechcontent/epitest-docker:latest
# Runs a set of commands using the runners shell
- name: Run a multi-line script
run: |
echo Add other actions to build,
echo test, and deploy your project.
to_gitlab:
runs-on: ubuntu-latest
steps: # <-- must use actions/checkout before mirroring!
- uses: actions/checkout@v2
with:
fetch-depth: 0
- uses: pixta-dev/repository-mirroring-action@v1
with:
target_repo_url:
https://github.com/LMECHIN/Lucas_mchn
ssh_private_key: # <-- use 'secrets' to pass credential information.
git@github.com:LMECHIN/Lucas_mchn.git
to_codecommit: # <-- different jobs are executed in parallel.
runs-on: ubuntu-latest
steps:
- uses: actions/checkout@v2
with:
fetch-depth: 0
- uses: pixta-dev/repository-mirroring-action@v1
name: push_to_mirror
with:
target_repo_url:
https://github.com/LMECHIN/Lucas_mchn.git
ssh_private_key:
git@github.com:LMECHIN/Lucas_mchn.git
ssh_username: # <-- (for codecommit) you need to specify ssh-key-id as ssh username.
${{ secrets.CODECOMMIT_SSH_PRIVATE_KEY_ID }}
